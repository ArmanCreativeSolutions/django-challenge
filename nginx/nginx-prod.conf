events {
    worker_connections 4096;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Frontend HTTP server block with exception for Certbot
    server {
        listen 80;
        listen [::]:80;
        server_name arman.dev www.arman.dev;
        server_tokens off;

        # Serve Certbot challenge files over HTTP
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Backend HTTP server block with exception for Certbot
    server {
        listen 80;
        listen [::]:80;
        server_name api.arman.dev www.api.arman.dev;
        server_tokens off;

        # Serve Certbot challenge files over HTTP
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Frontend HTTPS server block
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name arman.dev www.arman.dev;
        server_tokens off;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;  # Prefer the client's cipher suite
        ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256";

        ssl_certificate /etc/nginx/ssl/live/arman.dev/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/arman.dev/privkey.pem;

        # Serve Certbot challenge files over HTTPS as well
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Proxy all other traffic to the frontend service
        location / {
            proxy_pass http://frontend:4200/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Backend HTTPS server block
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name api.arman.dev www.api.arman.dev;
        server_tokens off;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;  # Prefer the client's cipher suite
        ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256";

        ssl_certificate /etc/nginx/ssl/live/api.arman.dev/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/api.arman.dev/privkey.pem;

        # Serve Certbot challenge files over HTTPS as well
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Proxy all other traffic to the backend service
        location / {
            proxy_pass http://backend:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /rabbit/ {
            proxy_pass http://rabbit:15672/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /static/ {
            alias /usr/share/nginx/static/;
        }

    }
}
